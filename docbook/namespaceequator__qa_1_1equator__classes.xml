<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespaceequator__qa_1_1equator__classes" xml:lang="en-US">
<title>equator_qa.equator_classes Namespace Reference</title>
<indexterm><primary>equator_qa.equator_classes</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classequator__qa_1_1equator__classes_1_1_e_q_u_a_t_o_r___client">EQUATOR_Client</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespaceequator__qa_1_1equator__classes_1ad7493ab7dc4b65b50491f632961b2c42">sanitize_string</link> (value)</para>
</listitem>
            <listitem><para><link linkend="_namespaceequator__qa_1_1equator__classes_1aa0f7d39147af0dd62b1170ce54f4fb7d">extract_score_from_string</link> (response_string)</para>
</listitem>
            <listitem><para><link linkend="_namespaceequator__qa_1_1equator__classes_1a3258b2fae2e04be5de37822da3a8f998">create_template_json</link> (student_model, output_path, question_id, category, human_answer, question, student_answer, evaluator_response, score)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespaceequator__qa_1_1equator__classes_1a3258b2fae2e04be5de37822da3a8f998"/><section>
    <title>create_template_json()</title>
<indexterm><primary>create_template_json</primary><secondary>equator_qa.equator_classes</secondary></indexterm>
<indexterm><primary>equator_qa.equator_classes</primary><secondary>create_template_json</secondary></indexterm>
<para><computeroutput>equator_qa.equator_classes.create_template_json ( student_model,  output_path,  question_id,  category,  human_answer,  question,  student_answer,  evaluator_response,  score)</computeroutput></para>
<para><literallayout><computeroutput>Creates or updates a JSON file with evaluation results for a student&apos;s answer.

This function ensures the output directory exists, loads existing data if available,
updates the JSON structure with the new evaluation data, and saves it back to the file.

Args:
    student_model (str):
        The identifier of the student model that generated the answer.
    output_path (str):
        The file path where the JSON data will be saved or updated.
    question_id (str):
        The unique identifier for the question being evaluated.
    category (str):
        The category or topic of the question.
    human_answer (str):
        The correct or reference answer provided by a human.
    question (str):
        The text of the question being evaluated.
    student_answer (str):
        The answer generated by the student model.
    evaluator_response (str):
        The feedback or evaluation provided by the evaluator.
    score (float):
        The numerical score assigned based on the evaluation.

Returns:
    None

Example:
    ```python
    create_template_json(
        student_model=&quot;gpt-4&quot;,
        output_path=&quot;./results/evaluation.json&quot;,
        question_id=&quot;Q123&quot;,
        category=&quot;Biology&quot;,
        human_answer=&quot;Photosynthesis is the process by which green plants...&quot;,
        question=&quot;Explain photosynthesis.&quot;,
        student_answer=&quot;Photosynthesis allows plants to convert sunlight into energy.&quot;,
        evaluator_response=&quot;The answer is correct but lacks detail on the chemical process.&quot;,
        score=85.0,
    )
    ```

Notes:
    - Ensure that the `jn` module is correctly imported as `json`.
    - The function will overwrite existing entries with the same `question_id`.
    - Handle sensitive data appropriately when writing to JSON files.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_namespaceequator__qa_1_1equator__classes_1aa0f7d39147af0dd62b1170ce54f4fb7d"/><section>
    <title>extract_score_from_string()</title>
<indexterm><primary>extract_score_from_string</primary><secondary>equator_qa.equator_classes</secondary></indexterm>
<indexterm><primary>equator_qa.equator_classes</primary><secondary>extract_score_from_string</secondary></indexterm>
<para><computeroutput>equator_qa.equator_classes.extract_score_from_string ( response_string)</computeroutput></para>
<para><literallayout><computeroutput>Extracts a numerical score from a response string using predefined patterns.

This function searches the input `response_string` for various patterns that indicate a score.
It uses regular expressions to match different formats and returns the first found score as an integer.
If no score pattern is matched, it returns `None`.

Args:
    response_string (str):
        The string containing the evaluator&apos;s response from which to extract the score.

Returns:
    Optional[int]:
        The extracted score as an integer if a pattern is matched; otherwise, `None`.

Example:
    ```python
    response = &quot;The score assigned is 85%.&quot;
    score = extract_score_from_string(response)
    print(score)  # Output: 85
    ```

Notes:
    - The function is case-insensitive and handles multiple score formats.
    - Ensure that the response strings follow one of the predefined patterns for accurate extraction.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_namespaceequator__qa_1_1equator__classes_1ad7493ab7dc4b65b50491f632961b2c42"/><section>
    <title>sanitize_string()</title>
<indexterm><primary>sanitize_string</primary><secondary>equator_qa.equator_classes</secondary></indexterm>
<indexterm><primary>equator_qa.equator_classes</primary><secondary>sanitize_string</secondary></indexterm>
<para><computeroutput>equator_qa.equator_classes.sanitize_string ( value)</computeroutput></para>
<para><literallayout><computeroutput>Escapes curly braces in strings to prevent issues with format specifiers in logging.
</computeroutput></literallayout> </para>
</section>
</section>
</section>
